@page "/students/info/{StudentId:int}"
@inject HttpClient http
@inject NavigationManager manager
<h3>Student Information</h3>
<div class="container">
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col-md-6">
            @if (student == null)
            {
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
            }
            else
            {
                <p><img src="@student.ImageUrl" width="300" /></p>
                <p><strong>Student Name</strong>: @student.Name</p>
                <p><strong>Admission Date</strong>: @student.AdmissionDate.ToShortDateString()</p>
                <p><strong>Active</strong>: @student.IsActive</p>
                <ul>
                    @foreach (var item in student.Addresses)
                    {
                        <li>@item.Type @item.Street @item.City</li>
                    }
                </ul>
                <button class="btn btn-secondary" @onclick="Close">Close</button>
            }
        </div>
        <div class="col-md-3"></div>
    </div>
</div>


@code {
    [Parameter]
    public int StudentId { get; set; }
    private Student student;
    protected async override Task OnInitializedAsync()
    {
        var response = await http.GetAsync($"api/students/{StudentId}");
        if (response.IsSuccessStatusCode)
        {
            student = await response.Content.ReadFromJsonAsync<Student>();
        }
        else
        {
            manager.NavigateTo("students");
        }
    }
    private void Close()
    {
        manager.NavigateTo("students");
    }
}
